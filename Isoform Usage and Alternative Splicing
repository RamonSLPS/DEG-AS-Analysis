quantsDir <- "/root/file/of/quantifications"
gtfDir <- "/path/to/your/sample.gtf"
cdnaDir <- "/path/to/your/sample.fa"
resDir <- "where/you/want/the/results"

design.df <- data.frame(
  sampleID=c("Sample_1", "Sample_2", "Sample_3", "Sample_4", "Sample_5", "Sample_6"), 
  condition=c("Control_1", "Control_1", "Control_1","Condition_1", "Condition_1", "Condition_1")
)
comp.df <- data.frame(
  condition_1=c("Control_1", "Control_2"), 
  condition_2=c("Condition_1", "Condition_2")
)

quants.df <- importIsoformExpression(
  parentDir=quantsDir, 
  addIsofomIdAsColumn=TRUE
)
aSwitchlist <- importRdata(
  isoformCountMatrix=quants.df$counts, 
  isoformRepExpression=quants.df$abundance, 
  designMatrix=design.df, 
  isoformExonAnnoation=gtfDir, 
  isoformNtFasta=cdnaDir, 
  comparisonsToMake=comp.df,
  fixStringTieAnnotationProblem=TRUE
)
aSwitchlist <- preFilter(
  aSwitchlist,
  geneExpressionCutoff=1,
  isoformExpressionCutoff=0,
  IFcutoff=0,
  removeSingleIsoformGenes=TRUE,
  reduceToSwitchingGenes=FALSE,
  reduceFurtherToGenesWithConsequencePotential=FALSE,
  onlySigIsoforms=TRUE,
  keepIsoformInAllConditions=FALSE,
  quiet=FALSE
)
aSwitchlist <- isoformSwitchTestDEXSeq(
  aSwitchlist, 
  reduceToSwitchingGenes=FALSE
)
aSwitchlist <- isoformSwitchAnalysisCombined(
  aSwitchlist,
  pathToOutput=resDir 
)
aSwitchlist <- analyzeAlternativeSplicing(
  aSwitchlist,
  onlySwitchingGenes=FALSE
)
aSwitchlist <- analyzeIntronRetention(
  aSwitchlist, onlySwitchingGenes=FALSE
)

extractPlots <- function(){
  pdf(paste0(resDir,"outputPlots.pdf"))
  extractSplicingSummary(aSwitchlist, plotGenes=TRUE, returnResult=FALSE)
  extractSplicingSummary(aSwitchlist, plotGenes=FALSE, returnResult=FALSE)
  extractSplicingEnrichment(aSwitchlist, returnResult=FALSE)
  extractConsequenceSummary(aSwitchlist)
  extractSwitchOverlap(aSwitchlist, plotIsoforms=TRUE, plotSwitches=FALSE, plotGenes=FALSE)
  extractSwitchOverlap(aSwitchlist, plotIsoforms=FALSE, plotSwitches=TRUE, plotGenes=FALSE)
  extractSwitchOverlap(aSwitchlist, plotIsoforms=FALSE, plotSwitches=FALSE, plotGenes=TRUE)
  dev.off()
  
  write.csv(extractSplicingSummary(aSwitchlist, plot=FALSE, returnResult=TRUE), file=(paste0(resDir,"splicingSummary.csv")))
  write.csv(extractSplicingEnrichment(aSwitchlist, plot=FALSE, returnResult=TRUE), file=(paste0(resDir,"splicingEnrichment.csv")))
  write.csv(extractSwitchSummary(aSwitchlist), file=(paste0(resDir,"switchSummary.csv")))
  write.csv(extractTopSwitches(aSwitchlist, n=NA, inEachComparison=TRUE), file=(paste0(resDir,"topSwitches.csv")))
  }



pdf(paste0(resDir,"outputPlots.pdf"))
extractSplicingSummary(aSwitchlist, plotGenes=TRUE, returnResult=FALSE)
extractSplicingSummary(aSwitchlist, plotGenes=FALSE, returnResult=FALSE)
extractSplicingEnrichment(aSwitchlist, returnResult=FALSE)
extractConsequenceSummary(aSwitchlist)
extractSwitchOverlap(aSwitchlist, plotIsoforms=TRUE, plotSwitches=FALSE, plotGenes=FALSE)
extractSwitchOverlap(aSwitchlist, plotIsoforms=FALSE, plotSwitches=TRUE, plotGenes=FALSE)
extractSwitchOverlap(aSwitchlist, plotIsoforms=FALSE, plotSwitches=FALSE, plotGenes=TRUE)
dev.off()

write.csv(extractSplicingSummary(aSwitchlist, plot=FALSE, returnResult=TRUE), file=(paste0(resDir,"splicingSummary.csv")))
write.csv(extractSplicingEnrichment(aSwitchlist, plot=FALSE, returnResult=TRUE), file=(paste0(resDir,"splicingEnrichment.csv")))
write.csv(extractSwitchSummary(aSwitchlist), file=(paste0(resDir,"switchSummary.csv")))
write.csv(extractTopSwitches(aSwitchlist, n=NA, inEachComparison=TRUE), file=(paste0(resDir,"topSwitches.csv")))
